project-root/
â”œâ”€â”€ frontend/               # React Frontend
â”‚   â”œâ”€â”€ src/
â”‚   â”‚   â”œâ”€â”€ App.js
â”‚   â”‚   â”œâ”€â”€ components/
â”‚   â”‚   â”‚   â”œâ”€â”€ FileUpload.js
â”‚   â”‚   â”‚   â”œâ”€â”€ JobDescriptionInput.js
â”‚   â”‚   â”‚   â”œâ”€â”€ ResumeList.js
â”‚   â”‚   â”œâ”€â”€ App.css
â”‚   â”‚   â”œâ”€â”€ index.js
â”‚   â”œâ”€â”€ package.json
â”‚
â”œâ”€â”€ backend/                # PHP Backend
â”‚   â”œâ”€â”€ upload.php
â”‚   â”œâ”€â”€ process.php
â”‚
â”œâ”€â”€ README.md               # Project Documentation



---

## **How to Run the Project**
1. **Frontend**:
   - Navigate to `/frontend` and run:
     ```bash
     npm install && npm start
     ```
   - The React app will launch at `http://localhost:3000`.

2. **Backend**:
   - Place the `/backend` folder in a PHP server (e.g., XAMPP `htdocs`).
   - Ensure the `uploads/` directory has write permissions.

3. **Testing**:
   - Upload resumes and input a job description.
   - Click "Rank Resumes" to see the ranked list.

---

## **Next Steps**
- Replace the mock scoring in `process.php` with actual **Gemini API** calls.
- Enhance UI with better styling (e.g., progress bars for uploads).
- Add error handling for file parsing failures.

---

This implementation provides a **fully functional prototype** that meets the contest requirements. Good luck with your submission! ðŸš€